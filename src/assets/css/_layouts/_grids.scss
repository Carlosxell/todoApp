@import '../_utilities/_exports';

$grid-gap: pxToRem(8);
$grid-columns: 12;

.l-grid {
  display: flex;
  flex-wrap: wrap;
  margin-left: -$grid-gap;
  margin-right: -$grid-gap;

  &--noGap {
    margin-left: 0;
    margin-right: 0;

    .l-col {
      padding-left: 0;
      padding-right: 0;
    }
  }
}

.l-col {
  flex-grow: 1;
  flex-basis: 0;
  max-width: 100%;
  margin-bottom: pxToRem(12);
  padding-left: $grid-gap;
  padding-right: $grid-gap;

  @for $i from 1 through $grid-columns {
    &--#{$i},
    &--Xs#{$i},
    &--Md#{$i},
    &--Lg#{$i} {
      @extend .l-col;
    }

    &--#{$i} {
      flex-basis: 100% / $grid-columns * $i;
      max-width: 100% / $grid-columns * $i;
    }
  }

  @media(min-width: pxToRem(568)) {
    @for $i from 1 through $grid-columns {
      &--Xs#{$i} {
        flex-basis: 100% / $grid-columns * $i;
        max-width: 100% / $grid-columns * $i;
      }
    }
  }

  @media(min-width: pxToRem(768)) {
    @for $i from 1 through $grid-columns {
      &--Md#{$i} {
        flex-basis: 100% / $grid-columns * $i;
        max-width: 100% / $grid-columns * $i;
      }
    }
  }

  @media(min-width: pxToRem(1080)) {
    @for $i from 1 through $grid-columns {
      &--Lg#{$i} {
        flex-basis: 100% / $grid-columns * $i;
        max-width: 100% / $grid-columns * $i;
      }
    }
  }
}

.l-alignSelfY {
  &--end {
    align-self: flex-end;
  }

  &--endXs {
    @media(min-width: pxToRem(568)) {
      align-self: flex-end;
    }
  }
}
